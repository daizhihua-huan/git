<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huanyuenwei.com.dao.user.UserMapper">

  <resultMap id="BaseResultMap" type="com.huanyumanagement.dao.user.model.User">
    <id column="id" jdbcType="LONGVARCHAR" property="userId"/>
    <result column="avatar" jdbcType="LONGVARCHAR" property="avatar"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="email" jdbcType="LONGVARCHAR" property="email"/>
    <result column="enabled" jdbcType="BIGINT" property="enabled"/>
    <result column="password" jdbcType="LONGVARCHAR" property="password"/>
    <result column="username" jdbcType="LONGVARCHAR" property="username"/>
    <result column="last_password_reset_time" jdbcType="TIMESTAMP" property="lastPasswordResetTime"/>
    <result column="dept_id" jdbcType="BIGINT" property="deptId"/>
    <result column="phone" jdbcType="LONGVARCHAR" property="phone"/>
    <result column="job_id" jdbcType="BIGINT" property="jobId"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" extends="BaseResultMap" type="com.huanyumanagement.dao.user.model.User">
    <result column="openid" jdbcType="LONGVARCHAR" property="openid"/>
    <result column="wx_name" jdbcType="LONGVARCHAR" property="wx_name"/>
  </resultMap>
  <sql id="Entity_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Entity_Where_Clause">
    <where>
      <foreach collection="entity.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `avatar`, `create_time`, `email`, `enabled`, `password`, `username`, `last_password_reset_time`, `dept_id`, `phone`, `job_id`
  </sql>
  <sql id="Blob_Column_List">
    `openid`, `wx_name`
  </sql>
  <select id="selectByEntityWithBLOBs" parameterType="com.huanyuenwei.com.dao.user.model.UserEntity" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `user`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByEntity" parameterType="com.huanyuenwei.com.dao.user.model.UserEntity" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `user`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List" />
    from `user`
    where `id` = #{userId,jdbcType=LONGVARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from `user`
    where `id` = #{userId,jdbcType=LONGVARCHAR}
  </delete>
  <delete id="deleteByEntity" parameterType="com.huanyuenwei.com.dao.user.model.UserEntity">
    delete from `user`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.huanyumanagement.dao.user.model.User">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `user` (
      `id`, 
      `avatar`, 
      `create_time`, 
      `email`, 
      `enabled`, 
      `password`, 
      `username`, 
      `last_password_reset_time`, 
      `dept_id`, 
      `phone`, 
      `job_id`, 
      `openid`, 
      `wx_name`
    )
    values (
      #{userId,jdbcType=LONGVARCHAR}, 
      #{avatar,jdbcType=LONGVARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, 
      #{email,jdbcType=LONGVARCHAR}, 
      #{enabled,jdbcType=BIGINT}, 
      #{password,jdbcType=LONGVARCHAR}, 
      #{username,jdbcType=LONGVARCHAR}, 
      #{lastPasswordResetTime,jdbcType=TIMESTAMP}, 
      #{deptId,jdbcType=BIGINT}, 
      #{phone,jdbcType=LONGVARCHAR}, 
      #{jobId,jdbcType=BIGINT}, 
      #{openid,jdbcType=LONGVARCHAR}, 
      #{wx_name,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.huanyumanagement.dao.user.model.User">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        `id`,
      </if>
      <if test="avatar != null">
        `avatar`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="email != null">
        `email`,
      </if>
      <if test="enabled != null">
        `enabled`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="username != null">
        `username`,
      </if>
      <if test="lastPasswordResetTime != null">
        `last_password_reset_time`,
      </if>
      <if test="deptId != null">
        `dept_id`,
      </if>
      <if test="phone != null">
        `phone`,
      </if>
      <if test="jobId != null">
        `job_id`,
      </if>
      <if test="openid != null">
        `openid`,
      </if>
      <if test="wx_name != null">
        `wx_name`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=LONGVARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=LONGVARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=LONGVARCHAR},
      </if>
      <if test="lastPasswordResetTime != null">
        #{lastPasswordResetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=LONGVARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=LONGVARCHAR},
      </if>
      <if test="wx_name != null">
        #{wx_name,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByEntity" parameterType="com.huanyuenwei.com.dao.user.model.UserEntity" resultType="java.lang.Integer">
    select count(*) from `user`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </select>
  <update id="updateByEntitySelective" parameterType="map">
    update `user`
    <set>
        `id` = #{record.userId,jdbcType=LONGVARCHAR},
        `avatar` = #{record.avatar,jdbcType=LONGVARCHAR},
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
        `email` = #{record.email,jdbcType=LONGVARCHAR},
        `enabled` = #{record.enabled,jdbcType=BIGINT},
        `password` = #{record.password,jdbcType=LONGVARCHAR},
        `username` = #{record.username,jdbcType=LONGVARCHAR},
        `last_password_reset_time` = #{record.lastPasswordResetTime,jdbcType=TIMESTAMP},
        `dept_id` = #{record.deptId,jdbcType=BIGINT},
        `phone` = #{record.phone,jdbcType=LONGVARCHAR},
        `job_id` = #{record.jobId,jdbcType=BIGINT},
        `openid` = #{record.openid,jdbcType=LONGVARCHAR},
        `wx_name` = #{record.wx_name,jdbcType=LONGVARCHAR},
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByEntityWithBLOBs" parameterType="map">
    update `user`
    set `id` = #{record.userId,jdbcType=LONGVARCHAR}, 
    set `avatar` = #{record.avatar,jdbcType=LONGVARCHAR}, 
    set `create_time` = #{record.createTime,jdbcType=TIMESTAMP}, 
    set `email` = #{record.email,jdbcType=LONGVARCHAR}, 
    set `enabled` = #{record.enabled,jdbcType=BIGINT}, 
    set `password` = #{record.password,jdbcType=LONGVARCHAR}, 
    set `username` = #{record.username,jdbcType=LONGVARCHAR}, 
    set `last_password_reset_time` = #{record.lastPasswordResetTime,jdbcType=TIMESTAMP}, 
    set `dept_id` = #{record.deptId,jdbcType=BIGINT}, 
    set `phone` = #{record.phone,jdbcType=LONGVARCHAR}, 
    set `job_id` = #{record.jobId,jdbcType=BIGINT}, 
    set `openid` = #{record.openid,jdbcType=LONGVARCHAR}, 
    set `wx_name` = #{record.wx_name,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause" />
    </if>
  </update>
  <update id="updateByEntity" parameterType="map">
    update `user`
    set `id` = #{record.userId,jdbcType=LONGVARCHAR}, 
`avatar` = #{record.avatar,jdbcType=LONGVARCHAR}, 
`create_time` = #{record.createTime,jdbcType=TIMESTAMP}, 
`email` = #{record.email,jdbcType=LONGVARCHAR}, 
`enabled` = #{record.enabled,jdbcType=BIGINT}, 
`password` = #{record.password,jdbcType=LONGVARCHAR}, 
`username` = #{record.username,jdbcType=LONGVARCHAR}, 
`last_password_reset_time` = #{record.lastPasswordResetTime,jdbcType=TIMESTAMP}, 
`dept_id` = #{record.deptId,jdbcType=BIGINT}, 
`phone` = #{record.phone,jdbcType=LONGVARCHAR}, 
`job_id` = #{record.jobId,jdbcType=BIGINT}, 
`openid` = #{record.openid,jdbcType=LONGVARCHAR}, 
`wx_name` = #{record.wx_name,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huanyumanagement.dao.user.model.User">
    update `user`
    <set>
        <if test="userId != null">
          `id` = #{userId,jdbcType=LONGVARCHAR},
        </if>
        <if test="avatar != null">
          `avatar` = #{avatar,jdbcType=LONGVARCHAR},
        </if>
        <if test="createTime != null">
          `create_time` = #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="email != null">
          `email` = #{email,jdbcType=LONGVARCHAR},
        </if>
        <if test="enabled != null">
          `enabled` = #{enabled,jdbcType=BIGINT},
        </if>
        <if test="password != null">
          `password` = #{password,jdbcType=LONGVARCHAR},
        </if>
        <if test="username != null">
          `username` = #{username,jdbcType=LONGVARCHAR},
        </if>
        <if test="lastPasswordResetTime != null">
          `last_password_reset_time` = #{lastPasswordResetTime,jdbcType=TIMESTAMP},
        </if>
        <if test="deptId != null">
          `dept_id` = #{deptId,jdbcType=BIGINT},
        </if>
        <if test="phone != null">
          `phone` = #{phone,jdbcType=LONGVARCHAR},
        </if>
        <if test="jobId != null">
          `job_id` = #{jobId,jdbcType=BIGINT},
        </if>
        <if test="openid != null">
          `openid` = #{openid,jdbcType=LONGVARCHAR},
        </if>
        <if test="wx_name != null">
          `wx_name` = #{wx_name,jdbcType=LONGVARCHAR},
        </if>
    </set>
    where `id` = #{userId,jdbcType=LONGVARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.huanyumanagement.dao.user.model.User">
    update `user`
    set
      `id` = #{templateId,jdbcType=LONGVARCHAR}, 
      `avatar` = #{templateId,jdbcType=LONGVARCHAR}, 
      `create_time` = #{templateId,jdbcType=TIMESTAMP}, 
      `email` = #{templateId,jdbcType=LONGVARCHAR}, 
      `enabled` = #{templateId,jdbcType=BIGINT}, 
      `password` = #{templateId,jdbcType=LONGVARCHAR}, 
      `username` = #{templateId,jdbcType=LONGVARCHAR}, 
      `last_password_reset_time` = #{templateId,jdbcType=TIMESTAMP}, 
      `dept_id` = #{templateId,jdbcType=BIGINT}, 
      `phone` = #{templateId,jdbcType=LONGVARCHAR}, 
      `job_id` = #{templateId,jdbcType=BIGINT}, 
      `openid` = #{templateId,jdbcType=LONGVARCHAR}, 
      `wx_name` = #{templateId,jdbcType=LONGVARCHAR}
    where `id` = #{userId,jdbcType=LONGVARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huanyumanagement.dao.user.model.User">
    update `user`
    set
        `id` = #{userId,jdbcType=LONGVARCHAR}, 
        `avatar` = #{avatar,jdbcType=LONGVARCHAR}, 
        `create_time` = #{createTime,jdbcType=TIMESTAMP}, 
        `email` = #{email,jdbcType=LONGVARCHAR}, 
        `enabled` = #{enabled,jdbcType=BIGINT}, 
        `password` = #{password,jdbcType=LONGVARCHAR}, 
        `username` = #{username,jdbcType=LONGVARCHAR}, 
        `last_password_reset_time` = #{lastPasswordResetTime,jdbcType=TIMESTAMP}, 
        `dept_id` = #{deptId,jdbcType=BIGINT}, 
        `phone` = #{phone,jdbcType=LONGVARCHAR}, 
        `job_id` = #{jobId,jdbcType=BIGINT}, 
        `openid` = #{openid,jdbcType=LONGVARCHAR}, 
        `wx_name` = #{wx_name,jdbcType=LONGVARCHAR}
    where `id` = #{userId,jdbcType=LONGVARCHAR}
  </update>
</mapper>