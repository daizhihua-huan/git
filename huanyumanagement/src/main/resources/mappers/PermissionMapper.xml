<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huanyuenwei.com.dao.permission.PermissionMapper">

  <resultMap id="BaseResultMap" type="com.huanyumanagement.dao.permission.model.Permission">
    <id column="id" jdbcType="LONGVARCHAR" property="permissionId"/>
    <result column="alias" jdbcType="LONGVARCHAR" property="alias"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="name" jdbcType="LONGVARCHAR" property="name"/>
    <result column="pid" jdbcType="INTEGER" property="pid"/>
  </resultMap>
  <sql id="Entity_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Entity_Where_Clause">
    <where>
      <foreach collection="entity.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `alias`, `create_time`, `name`, `pid`
  </sql>
  <select id="selectByEntity" parameterType="com.huanyuenwei.com.dao.permission.model.PermissionEntity" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `permission`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `permission`
    where `id` = #{permissionId,jdbcType=LONGVARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from `permission`
    where `id` = #{permissionId,jdbcType=LONGVARCHAR}
  </delete>
  <delete id="deleteByEntity" parameterType="com.huanyuenwei.com.dao.permission.model.PermissionEntity">
    delete from `permission`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.huanyumanagement.dao.permission.model.Permission">
    <selectKey keyProperty="permissionId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `permission` (
      `id`, 
      `alias`, 
      `create_time`, 
      `name`, 
      `pid`
    )
    values (
      #{permissionId,jdbcType=LONGVARCHAR}, 
      #{alias,jdbcType=LONGVARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=LONGVARCHAR}, 
      #{pid,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.huanyumanagement.dao.permission.model.Permission">
    <selectKey keyProperty="permissionId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `permission`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        `id`,
      </if>
      <if test="alias != null">
        `alias`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="pid != null">
        `pid`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        #{permissionId,jdbcType=LONGVARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByEntity" parameterType="com.huanyuenwei.com.dao.permission.model.PermissionEntity" resultType="java.lang.Integer">
    select count(*) from `permission`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </select>
  <update id="updateByEntitySelective" parameterType="map">
    update `permission`
    <set>
        `id` = #{record.permissionId,jdbcType=LONGVARCHAR},
        `alias` = #{record.alias,jdbcType=LONGVARCHAR},
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
        `name` = #{record.name,jdbcType=LONGVARCHAR},
        `pid` = #{record.pid,jdbcType=INTEGER},
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByEntity" parameterType="map">
    update `permission`
    set `id` = #{record.permissionId,jdbcType=LONGVARCHAR}, 
`alias` = #{record.alias,jdbcType=LONGVARCHAR}, 
`create_time` = #{record.createTime,jdbcType=TIMESTAMP}, 
`name` = #{record.name,jdbcType=LONGVARCHAR}, 
`pid` = #{record.pid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huanyumanagement.dao.permission.model.Permission">
    update `permission`
    <set>
        <if test="permissionId != null">
          `id` = #{permissionId,jdbcType=LONGVARCHAR},
        </if>
        <if test="alias != null">
          `alias` = #{alias,jdbcType=LONGVARCHAR},
        </if>
        <if test="createTime != null">
          `create_time` = #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="name != null">
          `name` = #{name,jdbcType=LONGVARCHAR},
        </if>
        <if test="pid != null">
          `pid` = #{pid,jdbcType=INTEGER},
        </if>
    </set>
    where `id` = #{permissionId,jdbcType=LONGVARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huanyumanagement.dao.permission.model.Permission">
    update `permission`
    set
        `id` = #{permissionId,jdbcType=LONGVARCHAR}, 
        `alias` = #{alias,jdbcType=LONGVARCHAR}, 
        `create_time` = #{createTime,jdbcType=TIMESTAMP}, 
        `name` = #{name,jdbcType=LONGVARCHAR}, 
        `pid` = #{pid,jdbcType=INTEGER}
    where `id` = #{permissionId,jdbcType=LONGVARCHAR}
  </update>
</mapper>